(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{438:function(t,s,a){"use strict";a.r(s);var e=a(25),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"심화-serializers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#심화-serializers"}},[t._v("#")]),t._v(" 심화-Serializers")]),t._v(" "),a("blockquote",[a("p",[t._v("이 장에서는 Serializer 의 유용성을 확장하고자 하는 것입니다. 그러나 간단한 문제는 아니며 고민이 필요한 설계 작업이 필요합니다.")]),t._v(" "),a("p",[t._v("-- Django users group, Russell Keith-Magee")])]),t._v(" "),a("p",[t._v("Serializer를 사용하면 QuerySets 및 모델 인스턴스와 같은 복잡한 데이터를 네이티브 Python 데이터 유형으로 변환한 다음 JSON, XML 또는 다른 콘텐츠 유형으로 쉽게 렌더링 할 수 있습니다. 또한 Serializer는 역 직렬화 기능을 제공하여 들어오는 데이터를 검증하고 파싱하여 복잡한 유형으로 다시 변환 할 수 있습니다.")]),t._v(" "),a("p",[t._v("REST 프레임워크의 serializer는 Django "),a("code",[t._v("Form")]),t._v(" 및 "),a("code",[t._v("ModelForm")]),t._v(" 클래스와 매우 유사하게 작동합니다. "),a("code",[t._v("Serializer")]),t._v("클래스는 serializer를 만들기 위해 모델과 QuerySets을 사용하는 shortcut을 제공하는 ModelSerializer 클래스 뿐만 아니라 응답의 출력을 제어 할수 있는 강력하고 포괄적인 방법들을 제공합니다.")]),t._v(" "),a("h2",{attrs:{id:"serializers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#serializers"}},[t._v("#")]),t._v(" Serializers")]),t._v(" "),a("h3",{attrs:{id:"serializers-선언"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#serializers-선언"}},[t._v("#")]),t._v(" Serializers 선언")]),t._v(" "),a("p",[t._v("간단한 객체를 만들어 보겠습니다.")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" datetime "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" datetime\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Comment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" content"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" created"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("email "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" email\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("content "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" content\n        self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("created "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" created "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" datetime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("now"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ncomment "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Comment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("email"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'leila@example.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" content"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo bar'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("Comment 객체의 데이터를 직렬화/역 직렬화 하는데 사용할 수 있는 Serializer를 선언합니다.\nSerializer 선언은 폼 선언과 매우 유사합니다 :")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" rest_framework "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" serializers\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("CommentSerializer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("serializers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Serializer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    email "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EmailField"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    content "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CharField"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max_length"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    created "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serializers"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DateTimeField"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("a",{attrs:{href:"https://nvie.com/posts/a-successful-git-branching-model/",target:"_blank",rel:"noopener noreferrer"}},[t._v("A successful Git branching model"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=r.exports}}]);